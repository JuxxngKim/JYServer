// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum.proto

#include "enum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace jy {
}  // namespace jy
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_enum_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_enum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_enum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_enum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nenum.proto\022\002jy*+\n\020EProtocolVersion\022\027\n\023"
  "RE_PROTOCOL_VERSION\020\004*\371\027\n\nEMessageID\022\017\n\013"
  "NET_CONNECT\020d\022\022\n\016NET_DISCONNECT\020e\022\021\n\rNET"
  "_ALIVE_REQ\020f\022\021\n\rNET_ALIVE_ACK\020g\022\024\n\020WRITE"
  "_SERVER_LOG\020h\022\027\n\023INTERNAL_EVENT_TICK\020i\022\020"
  "\n\014NULL_MESSAGE\020j\022\034\n\027CG_CLIENT_GATEWAY_BE"
  "GIN\020\350\007\022\026\n\021CG_AUTH_LOGIN_REQ\020\351\007\022\026\n\021GC_AUT"
  "H_LOGIN_ACK\020\352\007\022\026\n\021GC_AUTH_LOGIN_NAK\020\353\007\022\032"
  "\n\025CG_GET_NMSS_TOKEN_REQ\020\354\007\022\032\n\025GC_GET_NMS"
  "S_TOKEN_ACK\020\355\007\022\035\n\030CG_APP_CERTIFICATION_R"
  "EQ\020\356\007\022\035\n\030GC_APP_CERTIFICATION_ACK\020\357\007\022\032\n\025"
  "GC_GET_NMSS_TOKEN_NAK\020\360\007\022\035\n\030GC_APP_CERTI"
  "FICATION_NAK\020\361\007\022\026\n\021CG_ENCRYPTION_REQ\020\362\007\022"
  "\026\n\021GC_ENCRYPTION_ACK\020\363\007\022#\n\036CG_GET_WAITIN"
  "G_QUEUE_ORDER_REQ\020\364\007\022#\n\036GC_GET_WAITING_Q"
  "UEUE_ORDER_ACK\020\365\007\022\032\n\025CG_CLIENT_GATEWAY_E"
  "ND\020\217N\022\036\n\031CA_CLIENT_ADVENTURE_BEGIN\020\220N\022\022\n"
  "\rAC_COMMON_NAK\020\221N\022\021\n\014CA_LOGIN_REQ\020\222N\022\021\n\014"
  "AC_LOGIN_ACK\020\223N\022\026\n\021CA_GET_PLAYER_REQ\020\327O\022"
  "\026\n\021AC_GET_PLAYER_ACK\020\330O\022\034\n\027AC_GET_PLAYER"
  "_INFO_NOTI\020\331O\022\034\n\027AC_GET_PLAYER_HERO_NOTI"
  "\020\332O\022!\n\034AC_GET_PLAYER_FORMATION_NOTI\020\334O\022\034"
  "\n\027AC_GET_PLAYER_DECK_NOTI\020\335O\022\032\n\025CA_SAVE_"
  "HERO_DECK_REQ\020\336O\022\032\n\025AC_SAVE_HERO_DECK_AC"
  "K\020\337O\022\033\n\026CA_HERO_EQUIP_ITEM_REQ\020\341O\022\033\n\026AC_"
  "HERO_EQUIP_ITEM_ACK\020\342O\022#\n\036AC_GET_PLAYER_"
  "USER_OPTION_NOTI\020\343O\022\034\n\027CA_SAVE_USER_OPTI"
  "ON_REQ\020\344O\022\034\n\027AC_SAVE_USER_OPTION_ACK\020\345O\022"
  "\030\n\023AC_CHANGE_ITEM_NOTI\020\347O\022\026\n\021CA_GAME_MAC"
  "RO_REQ\020\350O\022\034\n\027AC_GAME_MACRO_KILL_NOTI\020\351O\022"
  "$\n\037AC_GAME_MACRO_TRACE_OBJECT_NOTI\020\352O\022\033\n"
  "\026AC_GET_PLAYER_ETC_NOTI\020\353O\022\027\n\022AC_CHANGE_"
  "ETC_NOTI\020\354O\022\032\n\025CA_HERO_REINFORCE_REQ\020\355O\022"
  "\032\n\025AC_HERO_REINFORCE_ACK\020\356O\022\030\n\023CA_HERO_C"
  "OMPOSE_REQ\020\357O\022\030\n\023AC_HERO_COMPOSE_ACK\020\360O\022"
  "\032\n\025CA_HERO_TRANSCEND_REQ\020\361O\022\032\n\025AC_HERO_T"
  "RANSCEND_ACK\020\362O\022\032\n\025CA_HERO_EVOLUTION_REQ"
  "\020\363O\022\032\n\025AC_HERO_EVOLUTION_ACK\020\364O\022\030\n\023AC_CH"
  "ANGE_HERO_NOTI\020\365O\022\036\n\031AC_GET_PLAYER_TICKE"
  "T_NOTI\020\366O\022\032\n\025AC_CHANGE_TICKET_NOTI\020\367O\022\035\n"
  "\030AC_GET_PLAYER_STAGE_NOTI\020\370O\022\033\n\026CA_SKILL"
  "_REINFORCE_REQ\020\371O\022\033\n\026AC_SKILL_REINFORCE_"
  "ACK\020\372O\022\032\n\025CA_ITEM_REINFORCE_REQ\020\373O\022\032\n\025AC"
  "_ITEM_REINFORCE_ACK\020\374O\022\025\n\020CA_ITEM_LOCK_R"
  "EQ\020\375O\022\025\n\020AC_ITEM_LOCK_ACK\020\376O\022\031\n\024CA_OPEN_"
  "ITEM_BOX_REQ\020\200P\022\031\n\024AC_OPEN_ITEM_BOX_ACK\020"
  "\201P\022$\n\037CA_STAGE_ACHIEVEMENT_REWARD_REQ\020\202P"
  "\022$\n\037AC_STAGE_ACHIEVEMENT_REWARD_ACK\020\203P\022\031"
  "\n\024CA_ENTER_DUNGEON_REQ\020\204P\022\031\n\024AC_ENTER_DU"
  "NGEON_ACK\020\205P\022\031\n\024AC_ENTER_DUNGEON_NAK\020\206P\022"
  "\037\n\032AC_GET_PLAYER_DUNGEON_NOTI\020\207P\022\034\n\027CA_I"
  "TEM_DISASSEMBLY_REQ\020\210P\022\034\n\027AC_ITEM_DISASS"
  "EMBLY_ACK\020\211P\022#\n\036CA_GET_HERO_GROWTH_STORA"
  "GE_REQ\020\212P\022#\n\036AC_GET_HERO_GROWTH_STORAGE_"
  "ACK\020\213P\022$\n\037CA_HERO_PUSH_GROWTH_STORAGE_RE"
  "Q\020\214P\022$\n\037AC_HERO_PUSH_GROWTH_STORAGE_ACK\020"
  "\215P\022#\n\036CA_HERO_POP_GROWTH_STORAGE_REQ\020\216P\022"
  "#\n\036AC_HERO_POP_GROWTH_STORAGE_ACK\020\217P\022+\n&"
  "AC_GET_PLAYER_HERO_GROWTH_STORAGE_NOTI\020\220"
  "P\022/\n*AC_GET_PLAYER_HERO_NON_GROWTH_STORA"
  "GE_NOTI\020\221P\022(\n#CA_HERO_PUSH_NON_GROWTH_ST"
  "ORAGE_REQ\020\222P\022(\n#AC_HERO_PUSH_NON_GROWTH_"
  "STORAGE_ACK\020\223P\022\'\n\"CA_HERO_POP_NON_GROWTH"
  "_STORAGE_REQ\020\224P\022\'\n\"AC_HERO_POP_NON_GROWT"
  "H_STORAGE_ACK\020\225P\022\'\n\"AC_CHANGE_HERO_GROWT"
  "H_STORAGE_NOTI\020\226P\022+\n&AC_CHANGE_HERO_NON_"
  "GROWTH_STORAGE_NOTI\020\227P\022-\n(CA_CHANGE_REPE"
  "TITION_BACKGROUND_MODE_REQ\020\230P\022-\n(AC_CHAN"
  "GE_REPETITION_BACKGROUND_MODE_ACK\020\231P\022-\n("
  "CA_CHANGE_REPETITION_FOREGROUND_MODE_REQ"
  "\020\232P\022-\n(AC_CHANGE_REPETITION_FOREGROUND_M"
  "ODE_ACK\020\233P\022)\n$CA_REPETITION_BATTLE_ENTER"
  "_STAGE_REQ\020\234P\022)\n$AC_REPETITION_BATTLE_EN"
  "TER_STAGE_ACK\020\235P\022)\n$AC_REPETITION_BATTLE"
  "_ENTER_STAGE_NAK\020\236P\022+\n&CA_CHANGE_REPETIT"
  "ION_BATTLE_OPTION_REQ\020\237P\022+\n&AC_CHANGE_RE"
  "PETITION_BATTLE_OPTION_ACK\020\240P\022\022\n\014AD_LOGI"
  "N_REQ\020\204\235\001\022\022\n\014DA_LOGIN_ACK\020\205\235\001\022\022\n\014DA_LOGI"
  "N_NAK\020\206\235\001*\246\004\n\tEErrorMsg\022\r\n\tE_SUCCESS\020\000\022\r"
  "\n\tE_UNKNOWN\020\001\022\036\n\032E_INVALID_PROTOCOL_VERS"
  "ION\020\002\022\024\n\020E_DUPLICATE_NAME\020\003\022\033\n\027E_AUTHENT"
  "ICATION_FAILED\020\004\022\035\n\031E_INTERNAL_DATABASE_"
  "ERROR\020\005\022\022\n\016E_PROCESS_FAIL\020\006\022\026\n\022E_NOT_EXI"
  "ST_PLAYER\020\007\022\026\n\022E_DUPLICATE_CLIENT\020\010\022(\n$E"
  "_WRONG_PLAYER_DATA_CLIENT_RECONNECT\020\t\022\032\n"
  "\026E_DUPLICATE_CONNECTION\020\n\022\035\n\031E_DB_DUPLIC"
  "ATE_CONNECTION\020\013\022\023\n\017E_TOKEN_EXPIRED\020\014\022\036\n"
  "\032E_INVALID_SIGNATURE_FORMAT\020\r\022\022\n\016E_DECOD"
  "E_ERROR\020\016\022*\n&E_NOT_EXIST_AVAILABLE_ADVEN"
  "TURE_SERVER\020\017\022\030\n\024E_MAINTENANCE_SERVER\020\020\022"
  "\024\n\020E_BLOCK_CONTENTS\020\021\022\026\n\022E_INVALID_PLATF"
  "ORM\020\022\022\017\n\013E_NMSS_FAIL\020\023\022\022\n\016E_INVALID_DATA"
  "\020\024"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_enum_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_enum_2eproto = {
  false, false, 3682, descriptor_table_protodef_enum_2eproto, "enum.proto", 
  &descriptor_table_enum_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_enum_2eproto::offsets,
  nullptr, file_level_enum_descriptors_enum_2eproto, file_level_service_descriptors_enum_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_enum_2eproto_getter() {
  return &descriptor_table_enum_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_enum_2eproto(&descriptor_table_enum_2eproto);
namespace jy {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EProtocolVersion_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enum_2eproto);
  return file_level_enum_descriptors_enum_2eproto[0];
}
bool EProtocolVersion_IsValid(int value) {
  switch (value) {
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EMessageID_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enum_2eproto);
  return file_level_enum_descriptors_enum_2eproto[1];
}
bool EMessageID_IsValid(int value) {
  switch (value) {
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 1000:
    case 1001:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 9999:
    case 10000:
    case 10001:
    case 10002:
    case 10003:
    case 10199:
    case 10200:
    case 10201:
    case 10202:
    case 10204:
    case 10205:
    case 10206:
    case 10207:
    case 10209:
    case 10210:
    case 10211:
    case 10212:
    case 10213:
    case 10215:
    case 10216:
    case 10217:
    case 10218:
    case 10219:
    case 10220:
    case 10221:
    case 10222:
    case 10223:
    case 10224:
    case 10225:
    case 10226:
    case 10227:
    case 10228:
    case 10229:
    case 10230:
    case 10231:
    case 10232:
    case 10233:
    case 10234:
    case 10235:
    case 10236:
    case 10237:
    case 10238:
    case 10240:
    case 10241:
    case 10242:
    case 10243:
    case 10244:
    case 10245:
    case 10246:
    case 10247:
    case 10248:
    case 10249:
    case 10250:
    case 10251:
    case 10252:
    case 10253:
    case 10254:
    case 10255:
    case 10256:
    case 10257:
    case 10258:
    case 10259:
    case 10260:
    case 10261:
    case 10262:
    case 10263:
    case 10264:
    case 10265:
    case 10266:
    case 10267:
    case 10268:
    case 10269:
    case 10270:
    case 10271:
    case 10272:
    case 20100:
    case 20101:
    case 20102:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EErrorMsg_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_enum_2eproto);
  return file_level_enum_descriptors_enum_2eproto[2];
}
bool EErrorMsg_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace jy
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
